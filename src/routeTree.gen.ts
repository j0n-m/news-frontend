/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as IndexImport } from './routes/index'
import { Route as SignoutIndexImport } from './routes/signout/index'
import { Route as FeedIndexImport } from './routes/feed/index'
import { Route as ProtectedHomeImport } from './routes/_protected/home'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthSigninImport } from './routes/_auth/signin'
import { Route as ProtectedSubscriptionsFavoritesImport } from './routes/_protected/subscriptions/favorites'
import { Route as ProtectedSubscribeFeedsImport } from './routes/_protected/subscribe/feeds'
import { Route as ProtectedSubscriptionsFeedIdIndexImport } from './routes/_protected/subscriptions/$feedId/index'
import { Route as ProtectedSubscriptionsFeedIdFeedItemIdImport } from './routes/_protected/subscriptions/$feedId/$feedItemId'
import { Route as ProtectedSubscriptionsFeedIdFeedItemIdPageImport } from './routes/_protected/subscriptions/$feedId_/$feedItemId.$page'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SignoutIndexRoute = SignoutIndexImport.update({
  id: '/signout/',
  path: '/signout/',
  getParentRoute: () => rootRoute,
} as any)

const FeedIndexRoute = FeedIndexImport.update({
  id: '/feed/',
  path: '/feed/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedHomeRoute = ProtectedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/_auth/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedSubscriptionsFavoritesRoute =
  ProtectedSubscriptionsFavoritesImport.update({
    id: '/subscriptions/favorites',
    path: '/subscriptions/favorites',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSubscribeFeedsRoute = ProtectedSubscribeFeedsImport.update({
  id: '/subscribe/feeds',
  path: '/subscribe/feeds',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedSubscriptionsFeedIdIndexRoute =
  ProtectedSubscriptionsFeedIdIndexImport.update({
    id: '/subscriptions/$feedId/',
    path: '/subscriptions/$feedId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSubscriptionsFeedIdFeedItemIdRoute =
  ProtectedSubscriptionsFeedIdFeedItemIdImport.update({
    id: '/subscriptions/$feedId/$feedItemId',
    path: '/subscriptions/$feedId/$feedItemId',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedSubscriptionsFeedIdFeedItemIdPageRoute =
  ProtectedSubscriptionsFeedIdFeedItemIdPageImport.update({
    id: '/subscriptions/$feedId_/$feedItemId/$page',
    path: '/subscriptions/$feedId/$feedItemId/$page',
    getParentRoute: () => ProtectedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_protected/home': {
      id: '/_protected/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeImport
      parentRoute: typeof ProtectedImport
    }
    '/feed/': {
      id: '/feed/'
      path: '/feed'
      fullPath: '/feed'
      preLoaderRoute: typeof FeedIndexImport
      parentRoute: typeof rootRoute
    }
    '/signout/': {
      id: '/signout/'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutIndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected/subscribe/feeds': {
      id: '/_protected/subscribe/feeds'
      path: '/subscribe/feeds'
      fullPath: '/subscribe/feeds'
      preLoaderRoute: typeof ProtectedSubscribeFeedsImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/subscriptions/favorites': {
      id: '/_protected/subscriptions/favorites'
      path: '/subscriptions/favorites'
      fullPath: '/subscriptions/favorites'
      preLoaderRoute: typeof ProtectedSubscriptionsFavoritesImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/subscriptions/$feedId/$feedItemId': {
      id: '/_protected/subscriptions/$feedId/$feedItemId'
      path: '/subscriptions/$feedId/$feedItemId'
      fullPath: '/subscriptions/$feedId/$feedItemId'
      preLoaderRoute: typeof ProtectedSubscriptionsFeedIdFeedItemIdImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/subscriptions/$feedId/': {
      id: '/_protected/subscriptions/$feedId/'
      path: '/subscriptions/$feedId'
      fullPath: '/subscriptions/$feedId'
      preLoaderRoute: typeof ProtectedSubscriptionsFeedIdIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/subscriptions/$feedId_/$feedItemId/$page': {
      id: '/_protected/subscriptions/$feedId_/$feedItemId/$page'
      path: '/subscriptions/$feedId/$feedItemId/$page'
      fullPath: '/subscriptions/$feedId/$feedItemId/$page'
      preLoaderRoute: typeof ProtectedSubscriptionsFeedIdFeedItemIdPageImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedHomeRoute: typeof ProtectedHomeRoute
  ProtectedSubscribeFeedsRoute: typeof ProtectedSubscribeFeedsRoute
  ProtectedSubscriptionsFavoritesRoute: typeof ProtectedSubscriptionsFavoritesRoute
  ProtectedSubscriptionsFeedIdFeedItemIdRoute: typeof ProtectedSubscriptionsFeedIdFeedItemIdRoute
  ProtectedSubscriptionsFeedIdIndexRoute: typeof ProtectedSubscriptionsFeedIdIndexRoute
  ProtectedSubscriptionsFeedIdFeedItemIdPageRoute: typeof ProtectedSubscriptionsFeedIdFeedItemIdPageRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedHomeRoute: ProtectedHomeRoute,
  ProtectedSubscribeFeedsRoute: ProtectedSubscribeFeedsRoute,
  ProtectedSubscriptionsFavoritesRoute: ProtectedSubscriptionsFavoritesRoute,
  ProtectedSubscriptionsFeedIdFeedItemIdRoute:
    ProtectedSubscriptionsFeedIdFeedItemIdRoute,
  ProtectedSubscriptionsFeedIdIndexRoute:
    ProtectedSubscriptionsFeedIdIndexRoute,
  ProtectedSubscriptionsFeedIdFeedItemIdPageRoute:
    ProtectedSubscriptionsFeedIdFeedItemIdPageRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/home': typeof ProtectedHomeRoute
  '/feed': typeof FeedIndexRoute
  '/signout': typeof SignoutIndexRoute
  '/subscribe/feeds': typeof ProtectedSubscribeFeedsRoute
  '/subscriptions/favorites': typeof ProtectedSubscriptionsFavoritesRoute
  '/subscriptions/$feedId/$feedItemId': typeof ProtectedSubscriptionsFeedIdFeedItemIdRoute
  '/subscriptions/$feedId': typeof ProtectedSubscriptionsFeedIdIndexRoute
  '/subscriptions/$feedId/$feedItemId/$page': typeof ProtectedSubscriptionsFeedIdFeedItemIdPageRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof ProtectedRouteWithChildren
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/home': typeof ProtectedHomeRoute
  '/feed': typeof FeedIndexRoute
  '/signout': typeof SignoutIndexRoute
  '/subscribe/feeds': typeof ProtectedSubscribeFeedsRoute
  '/subscriptions/favorites': typeof ProtectedSubscriptionsFavoritesRoute
  '/subscriptions/$feedId/$feedItemId': typeof ProtectedSubscriptionsFeedIdFeedItemIdRoute
  '/subscriptions/$feedId': typeof ProtectedSubscriptionsFeedIdIndexRoute
  '/subscriptions/$feedId/$feedItemId/$page': typeof ProtectedSubscriptionsFeedIdFeedItemIdPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_protected/home': typeof ProtectedHomeRoute
  '/feed/': typeof FeedIndexRoute
  '/signout/': typeof SignoutIndexRoute
  '/_protected/subscribe/feeds': typeof ProtectedSubscribeFeedsRoute
  '/_protected/subscriptions/favorites': typeof ProtectedSubscriptionsFavoritesRoute
  '/_protected/subscriptions/$feedId/$feedItemId': typeof ProtectedSubscriptionsFeedIdFeedItemIdRoute
  '/_protected/subscriptions/$feedId/': typeof ProtectedSubscriptionsFeedIdIndexRoute
  '/_protected/subscriptions/$feedId_/$feedItemId/$page': typeof ProtectedSubscriptionsFeedIdFeedItemIdPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/home'
    | '/feed'
    | '/signout'
    | '/subscribe/feeds'
    | '/subscriptions/favorites'
    | '/subscriptions/$feedId/$feedItemId'
    | '/subscriptions/$feedId'
    | '/subscriptions/$feedId/$feedItemId/$page'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/home'
    | '/feed'
    | '/signout'
    | '/subscribe/feeds'
    | '/subscriptions/favorites'
    | '/subscriptions/$feedId/$feedItemId'
    | '/subscriptions/$feedId'
    | '/subscriptions/$feedId/$feedItemId/$page'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_protected/home'
    | '/feed/'
    | '/signout/'
    | '/_protected/subscribe/feeds'
    | '/_protected/subscriptions/favorites'
    | '/_protected/subscriptions/$feedId/$feedItemId'
    | '/_protected/subscriptions/$feedId/'
    | '/_protected/subscriptions/$feedId_/$feedItemId/$page'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  FeedIndexRoute: typeof FeedIndexRoute
  SignoutIndexRoute: typeof SignoutIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  FeedIndexRoute: FeedIndexRoute,
  SignoutIndexRoute: SignoutIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/_auth/signin",
        "/_auth/signup",
        "/feed/",
        "/signout/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/home",
        "/_protected/subscribe/feeds",
        "/_protected/subscriptions/favorites",
        "/_protected/subscriptions/$feedId/$feedItemId",
        "/_protected/subscriptions/$feedId/",
        "/_protected/subscriptions/$feedId_/$feedItemId/$page"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_protected/home": {
      "filePath": "_protected/home.tsx",
      "parent": "/_protected"
    },
    "/feed/": {
      "filePath": "feed/index.tsx"
    },
    "/signout/": {
      "filePath": "signout/index.tsx"
    },
    "/_protected/subscribe/feeds": {
      "filePath": "_protected/subscribe/feeds.tsx",
      "parent": "/_protected"
    },
    "/_protected/subscriptions/favorites": {
      "filePath": "_protected/subscriptions/favorites.tsx",
      "parent": "/_protected"
    },
    "/_protected/subscriptions/$feedId/$feedItemId": {
      "filePath": "_protected/subscriptions/$feedId/$feedItemId.tsx",
      "parent": "/_protected"
    },
    "/_protected/subscriptions/$feedId/": {
      "filePath": "_protected/subscriptions/$feedId/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/subscriptions/$feedId_/$feedItemId/$page": {
      "filePath": "_protected/subscriptions/$feedId_/$feedItemId.$page.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
